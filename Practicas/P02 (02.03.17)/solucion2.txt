Programación con restricciones - práctica 2

#Nombre1: Carlos Piña Martínez
#Nombre2: Juan Luis Romero Sánchez
#Nombre3:

#Observaciones:

#P1 :
%variables
var int: x;
var int: y;

%constraints
constraint x > 5 /\ x < 2*y;

solve satisfy;

%output
output ["x= ", show (x), "\n",
        "y= ", show (y)];

#P2 :
%variables
var int: x;
var int: y;

%constraints
constraint x > 5 /\ x < 2*y;
constraint y = x-5;
constraint x < 10;

solve satisfy;

%output
output ["x= ", show (x), "\n",
        "y= ", show (y)];

#P3 :
%variables
var -2..2: x;
var -2..2: y;
var -2..2: z;
var -2..2: m;

%constraint
constraint ((x<y) /\ (y<z) /\ (m=z)) 
            \/ ((x<y) /\ not (y<z) /\ (m=y)) 
            \/ (not (x<y) /\ (x<z) /\ m=z) 
            \/ (not (x<y) /\ not (x<z) /\ m=x);

solve satisfy;

output ["  x= ", show (x),"  y= ", show (y), "  z= ", show(z),  "\n",
        "  maximo m = ", show (m)];

#P4 :
%variables
var -2..2: x;
var -2..2: y;
var -2..2: z;
var -2..2: m;

%constraint
constraint ((x<y) /\ (y<z) /\ (m=z)) 
            \/ ((x<y) /\ not (y<z) /\ (m=y)) 
            \/ (not (x<y) /\ (x<z) /\ m=z) 
            \/ (not (x<y) /\ not (x<z) /\ m=x);
constraint m != x /\ m != y /\ m != z;

%No hay solución, ya que estamos buscando el máximo entre x, y, z, 
%por tanto m (el máximo) no puede ser distinto de los tres a la vez.

solve satisfy;

output ["  x= ", show (x),"  y= ", show (y), "  z= ", show(z),  "\n",
        "  maximo m = ", show (m)];

#P5 :
%variables
var -2..2: x;
var -2..2: y;
var -2..2: z;
var -2..2: m;

var -1000..1000: a;
var -1000..1000: b;
var -1000..1000: u;

%constraint
constraint ((x<y) /\ (y<z) /\ (m=z)) 
            \/ ((x<y) /\ not (y<z) /\ (m=y)) 
            \/ (not (x<y) /\ (x<z) /\ m=z) 
            \/ (not (x<y) /\ not (x<z) /\ m=x);

constraint ((a>0) /\ (x=a) /\ (y=b) /\ (z=100) /\ (u=m))
            \/(not(a>0) /\ (x=a*a) /\ (y=b) /\ (z=b*b) /\ (u=m+1));


solve satisfy;

output ["  x= ", show (x),"  y= ", show (y), "  z= ", show(z),  "\n",
        "  a= ", show (a),"  b= ", show (b), "\n",
        "  u= ", show(u),  "\n",
        "  maximo m = ", show (m)];

